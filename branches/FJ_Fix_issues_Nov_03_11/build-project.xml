<!--
	This buildfile should be used to customize the default behavior of the build tasks.
	All targets can be overridden in this file.
-->
<project>
	<path id="testclasspath-c2">
		<fileset dir="${lib.dir}">    
            <include name="**/*.jar"/>
        </fileset>
		<fileset dir="platform-c2">
			<include name="**/*.jar" />
		</fileset>	
		<fileset dir="${sdk.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
	</path>

	<!--Target for running tests -->
	<!--
	<target name="test"
	        depends="init,compile-test,cobertura-instrument"
	        description="Runs the unit tests"
	        unless="skip.test"
	>
		<junit printsummary="yes" haltonfailure="no" fork="yes">
			<sysproperty key="net.sourceforge.cobertura.datafile"
			             file="${build.dir}/cobertura.ser"
			/>
			<classpath>
				<pathelement path="${build.cobertura.instrumented}" />
				<pathelement path="${build.classes}" />
				<pathelement path="${build.test.classes}" />
				<pathelement path="${build.test}" />
				<pathelement path="${build.jar}" />
				<path refid="actual-testclasspath" />
			</classpath>
			<formatter type="xml" usefile="true" />
			<batchtest todir="${build.junitreports}">
				<fileset dir="${test.java}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>

		<mkdir dir="${build.junitreports}-c2" />
		<junit printsummary="yes" haltonfailure="no" fork="yes" newenvironment="true">
			<sysproperty key="net.sourceforge.cobertura.datafile"
			             file="${build.dir}/cobertura.ser"
			/>
			<sysproperty key="java.library.path" value="platform-c2/bin"/>
			<classpath>
				<pathelement path="${build.cobertura.instrumented}" />
				<pathelement path="${build.classes}" />
				<pathelement path="${build.test.classes}" />
				<pathelement path="${build.test}" />
				<pathelement path="${build.jar}" />
				<path refid="testclasspath-c2" />
			</classpath>
			<formatter type="xml" usefile="true" />
			<batchtest todir="${build.junitreports}-c2">
				<fileset dir="${test.java}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>		

		<antcall target="cobertura-report" />

		<junitreport todir="${build.junitreports}">
			<fileset dir="${build.junitreports}">
				<include name="TEST-*.xml" />
			</fileset>
			<fileset dir="${build.junitreports}-c2">
				<include name="TEST-*.xml" />
			</fileset>			
			<report styledir="${sdk.build.framework.dir}"
			        format="frames"
			        todir="${build.junitreports}/html"
			/>
		</junitreport>
		<copy file="${junit.custom.css}" tofile="${build.junitreports}/html/stylesheet.css" overwrite="true"/>
	</target>
	-->
	
	<target name="filemanager-isv"
		        description="Creates the File Manager ISV package"
		>
			<isv organization="${isv.org}"
			     owner="${isv.owner}"
			     productname="File Manager"
			     version="${project.version}"
			     type="standard"
			     name="Cordys CoE File Manager"
			     filename="Cordys CoE File Manager_${project.version}"
			     destdir="${build.isv}"
			     copyisv="true"
			     userdn="${isv.userdn}"
				 build="1"
			>
				<content type="filesystem"
				         contentfile="${src.content}/isv-filemanager/FileSystem.xml">
					<fileset>
						<patternset refid="all.non.cvs.files" />
						<patternset refid="all.non.vss.files" />
						<patternset refid="all.non.svn.files" />
					</fileset>
				</content>					
				<content type="roles" contentfile="${src.content}/isv-filemanager/Roles.xml" />
				<content type="menus" contentfile="${src.content}/isv-filemanager/Menus.xml" />
				<content type="xforms" contentfile="${src.content}/isv-filemanager/XForms.xml" />
			</isv>
		</target>
</project>